#!/usr/bin/env bash
#vim:filetype=zsh:shiftwidth=2:softtabstop=2:expandtab:foldmethod=marker:foldmarker=###{{{,###}}}
#shellcheck disable=2034

########################################
#[============== YAYFZF ==============]#
########################################
##{{{ OPTIONS/VARIABLES

packages_sort_by="votes"
use_color="always"
detailedPreview="yay --sync --info --info --verbose --color $use_color "
installPackage="yay -syv && yay --sync --verbose --color $use_color --nobatchinstall --confirm"
updatePackages="yay -syuv"
colortheme='hl:#FFFF00,hl+:#DD00FF,fg:#CCCCEE,fg+:#00ffff,bg:#010101,bg+:#202020,query:#FFFF00,info:#99BBee,spinner:#ff00ff,border:#770aff,label:bold:#770aff,preview-fg:#ffffff,preview-bg:#090909,marker:#00ff00,gutter:#101010,pointer:#00ffff,info:#020202,header:#191919'

PROG="yayfzf"
VERSION="0.1.0"
AUTHOR="ConnerWill"
REPO="https://github.com/ConnerWill/yayfzf"
YAYFZF_HISTORY=${YAYFZF_HISTORY:-${XDG_CACHE_HOME:-~/.cache}/yayfzf/history}

##}}}

##{{{ HELP/STATUS

##{{{ HELP MENU

_yayfzf_keys() {
  cat <<EOF
KEYBINDINGS:

                     TAB : Select
               Shift-TAB : Unselect
                  Ctrl-d : Deselect all
                  Ctrl-i : Install selected
                  Ctrl-r : Uninstall selected
                  Ctrl-u : Update all packages
                  Ctrl-p : History previous
                  Ctrl-n : History next
                  Ctrl-/ : Change layout
                  Ctrl-v : Hide/show preview
                    HOME : Top
                     END : Bottom
                  PAGEUP : Scroll one page up
                PAGEDOWN : Scroll one page down
                  Ctrl-l : Clear query
           Alt-backspace : Clear query
                Alt-left : Delete word
                 Ctrl-h  : Show help
                       ? : Show keybindings
                  Ctrl-c : Exit
                  Ctrl-q : Exit
                     ESC : Exit
EOF
}

_yayfzf_help() {
  cat >&2 <<EOF

NAME:

  $PROG


DESCRIPTION:

  Search, install, remove packages from the AUR interactively with fzf


USAGE:

  $PROG [options] [search query]

  $PROG [-V|--version] [-k|--keybindings] [-h] [--help] [search query]


OPTIONS

  -h                   Show the help menu
  --help               Show the extended help menu of $PROG
  -k, --keybindings    List keybindings for $PROG
  -V, --version        Show version of $PROG

EOF
}

_yayfzf_help_full() {
  cat >&2 <<EOF
$(_yayfzf_help)
EXAMPLES:

  $ $PROG        : Run $PROG with no search query

  $ $PROG fzf    : Search for 'fzf' with $PROG

  $ $PROG        : Show the help menu for $PROG


$(_yayfzf_keys)


For more information, check out the yayfzf README
https://github.com/ConnerWill/yayfzf/blob/main/docs/README.md
EOF

  return 0
}

_yayfzf_version(){
  echo "${PROG}: ${VERSION}"
  return 0
}

##}}}

##{{{ ERROR MESSEGES

function _yayfzf_error() {
  printf "\x1b[0;1;38;5;196m%s\x1b[0m\n" "${@}" >/dev/stderr
  return
}

function _yayfzf_warning() {
  printf "\x1b[0;1;38;5;190m%s\x1b[0m\n" "${@}" >/dev/stderr
  return
}

function _yayfzf_verbose() {
  printf "\x1b[0;38;5;87m%s\x1b[0m\n" "${@}" >/dev/stderr
  return
}
##}}}

##}}}

##{{{ FUNCTIONS

##{{{ SEARCH PACKAGES
function _search_packagemgr() {
  # echo -en '\e]0;yayfzf\e\\' # set title
  local searchQuery
  searchQuery="${*}"
  yay --sync --search --quiet --singlelineresults \
    --sortby "${packages_sort_by}" \
  "$searchQuery"
}

## List all packages
function _list_packagemgr() {
  # echo -en '\e]0;yayfzf\e\\' # set title
    yay --sync --list --quiet --singlelineresults \
      --sortby "$packages_sort_by"
}

## List all installed packages
function _list_installed_packagemgr() {
  # echo -en '\e]0;yayfzf\e\\' # set title
    yay --query --singlelineresults \
      --sortby "$packages_sort_by"
}
##}}}

##{{{ MKDIR HISTORY
function _yayfzf_create_history(){
  if [[ ! -d "$(dirname "${YAYFZF_HISTORY}")" ]]; then
    mkdir -p "$(dirname "$YAYFZF_HISTORY")" 2>/dev/null
    touch "$YAYFZF_HISTORY" 2>/dev/null
  fi
}
##}}}

##{{{ FZF

## Main script. Run fzf with package manager search results.
function _fzf() {
  # tput smcup
  # trap 'tput rmcup' SIGINT

  #echo -en '\e]0;yayfzf\e\\' # set title
  local SearchInput SearchHeader
  SearchInput="${*}"
  [[ -n "${SearchInput}" ]] && SearchHeader="${SearchInput}" && label="${SearchInput}" || label="yayfzf"

  fzf \
    --bind "ctrl-i:execute: echo 'Installing: {+}' && sleep 1 && yay -Sv {+} ; echo 'Press ENTER' && read -r" \
    --bind "ctrl-r:execute: echo 'Removing ...' && sleep 1 ; yay -Rv {+}; echo 'Press ENTER' && read -r" \
    --bind "ctrl-u:execute: echo 'Updating ...' && sleep 1 ; yay -Syuv; echo 'Press ENTER' && read -r" \
    --bind 'ctrl-/:change-preview-window(up,border-rounded|up,40%,border-rounded|left,border-rounded|left,border-rounded,40%|down,border-rounded|down,40%,border-rounded|down,10%,border-rounded|hidden|right,40%,border-rounded|right,70%,border-rounded|right,90%,border-rounded)' \
    --bind 'ctrl-l:clear-query+clear-screen+clear-selection' \
    --bind 'alt-bspace:clear-query'             \
    --bind 'alt-left:kill-word'                 \
    --bind "esc:abort"                          \
    --bind 'ctrl-c:abort'                       \
    --bind 'ctrl-d:deselect-all'                \
    --bind 'ctrl-q:print-query'                 \
    --bind 'ctrl-v:toggle-preview'              \
    --bind 'ctrl-n:next-history'                \
    --bind 'ctrl-p:previous-history'            \
    --bind 'right:first'                        \
    --bind 'left:first'                         \
    --bind 'end:first'                          \
    --bind 'home:last'                          \
    --bind 'pgdn:page-down'                     \
    --bind 'pgup:page-up'                       \
    --bind 'shift-tab:deselect'                 \
    --bind 'tab:select'                         \
    --bind change:first                         \
    --bind "?:preview(echo '$(_yayfzf_keys)')"  \
    --header 'Press ? for keybindings'          \
    --preview 'cat <(yay -Si {1}) <(yay -Fl {1} | awk "{print \$2}")' \
    --preview-window 'bottom,43%,border-double' \
    --history="$YAYFZF_HISTORY"                 \
    --query="${SearchInput}"                    \
    --preview-label-pos=top                     \
    --border-label-pos=3                        \
    --border 'horizontal'                       \
    --preview-label="╡${label}╞"                \
    --border-label="╡${PROG}╞"                 \
    --info inline                               \
    --scroll-off=20                             \
    --hscroll-off=30                            \
    --ellipsis="⣿"                              \
    --tiebreak=begin                            \
    --sync                                      \
    --delimiter ' '                             \
    --ansi                                      \
    --color="${colortheme}" < <( yay -Ss "${SearchInput}" \
                                   --singlelineresults    \
                                   --color always         \
                                   --bottomup 2>/dev/null \
                                       | grep --invert-match --extended-regexp '(\(Orphan.*\)|\(Out.*\))' \
                                       | cut --delimiter=' ' --fields=1,7-                                \
                                       | column --separator=$'\t' --output-separator=': ' --table --output-width=$(( COLUMNS / 4 ))
                              )

    # --bind "?:change-preview-window(right,26%|down,43%)+preview(echo '$(_yayfzf_keys)')"  \
    # tput rmcup
    returnSIG=$?
    echo $returnSIG
    return $returnSIG
}

##}}}

##}}}

##{{{ MAIN

function _main() {
  # echo -en '\e[22;0t' # save title
  if [[ -n "$1" ]]; then
    while [[ -n $1 ]]; do
      case $1 in
        -h*)         _yayfzf_help      ; return 0  ;;
        --h*|help)   _yayfzf_help_full ; return 0  ;;
        -V|--ver*)   _yayfzf_version   ; return 0  ;;
        -k|--key*)   _yayfzf_keys      ; return 0  ;;
        -*)          _yayfzf_error "Unknown option '${1}'"
                     _yayfzf_help      ; return 0  ;;
         *)          _fzf "${@}"       ; return $? ;;
      esac
      shift
    done
  else
    _fzf "${@}"; return $?
  fi
}
  # # echo -en '\e[23;0t' # restore title
##}}}

function yayfzf() {
  _yayfzf_create_history
  _main "${@}"
}

## check if sourced or run directly
(return 0 2>/dev/null) && sourced=1 || sourced=0
[[ $sourced -eq 0 ]] && yayfzf "${@}"

##}}}
